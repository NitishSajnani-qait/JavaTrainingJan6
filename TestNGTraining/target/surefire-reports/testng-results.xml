<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
    <line>
      <![CDATA[Expected output3]]>
    </line>
    <line>
      <![CDATA[Expected output1]]>
    </line>
  </reporter-output>
  <suite name="com.qait.math.TestAdd" duration-ms="35" started-at="2018-02-10T09:07:31Z" finished-at="2018-02-10T09:07:31Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="35" started-at="2018-02-10T09:07:31Z" finished-at="2018-02-10T09:07:31Z">
      <class name="com.qait.math.TestAdd">
        <test-method status="PASS" signature="testPositiveScenario(java.lang.String, java.lang.String, int)[pri:0, instance:com.qait.math.TestAdd@1e67b872]" name="testPositiveScenario" duration-ms="8" started-at="2018-02-10T14:37:31Z" data-provider="getData" finished-at="2018-02-10T14:37:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Expected output3]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPositiveScenario -->
        <test-method status="PASS" signature="testPositiveScenario(java.lang.String, java.lang.String, int)[pri:0, instance:com.qait.math.TestAdd@1e67b872]" name="testPositiveScenario" duration-ms="1" started-at="2018-02-10T14:37:31Z" data-provider="getData" finished-at="2018-02-10T14:37:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Expected output1]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPositiveScenario -->
        <test-method status="FAIL" signature="testPositiveScenario(java.lang.String, java.lang.String, int)[pri:0, instance:com.qait.math.TestAdd@1e67b872]" name="testPositiveScenario" duration-ms="0" started-at="2018-02-10T14:37:31Z" data-provider="getData" finished-at="2018-02-10T14:37:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <exception class="com.qait.math.InputNotANumberException">
            <message>
              <![CDATA[The number entered can only be a number]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qait.math.InputNotANumberException: The number entered can only be a number
	at com.qait.math.Math.add(Math.java:20)
	at com.qait.math.TestAdd.testPositiveScenario(TestAdd.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.qait.math.InputNotANumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveScenario -->
      </class> <!-- com.qait.math.TestAdd -->
    </test> <!-- Command line test -->
  </suite> <!-- com.qait.math.TestAdd -->
</testng-results>
